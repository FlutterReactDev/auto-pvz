/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutNewFileImport } from './routes/_layout/new-file'
import { Route as LayoutFilesLayoutImport } from './routes/_layout/files/_layout'
import { Route as LayoutFilesIdIndexImport } from './routes/_layout/files/$id/index'

// Create Virtual Routes

const LayoutFilesImport = createFileRoute('/_layout/files')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutFilesRoute = LayoutFilesImport.update({
  path: '/files',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutNewFileRoute = LayoutNewFileImport.update({
  path: '/new-file',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFilesLayoutRoute = LayoutFilesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutFilesRoute,
} as any)

const LayoutFilesIdIndexRoute = LayoutFilesIdIndexImport.update({
  path: '/$id/',
  getParentRoute: () => LayoutFilesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/new-file': {
      id: '/_layout/new-file'
      path: '/new-file'
      fullPath: '/new-file'
      preLoaderRoute: typeof LayoutNewFileImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/files': {
      id: '/_layout/files'
      path: '/files'
      fullPath: '/files'
      preLoaderRoute: typeof LayoutFilesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/files/_layout': {
      id: '/_layout/files/_layout'
      path: '/files'
      fullPath: '/files'
      preLoaderRoute: typeof LayoutFilesLayoutImport
      parentRoute: typeof LayoutFilesRoute
    }
    '/_layout/files/$id/': {
      id: '/_layout/files/$id/'
      path: '/$id'
      fullPath: '/files/$id'
      preLoaderRoute: typeof LayoutFilesIdIndexImport
      parentRoute: typeof LayoutFilesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutNewFileRoute,
    LayoutIndexRoute,
    LayoutFilesRoute: LayoutFilesRoute.addChildren({ LayoutFilesIdIndexRoute }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/new-file",
        "/_layout/",
        "/_layout/files"
      ]
    },
    "/_layout/new-file": {
      "filePath": "_layout/new-file.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/files": {
      "filePath": "_layout/files",
      "parent": "/_layout",
      "children": [
        "/_layout/files/_layout",
        "/_layout/files/$id/"
      ]
    },
    "/_layout/files/_layout": {
      "filePath": "_layout/files/_layout.tsx",
      "parent": "/_layout/files"
    },
    "/_layout/files/$id/": {
      "filePath": "_layout/files/$id/index.tsx",
      "parent": "/_layout/files"
    }
  }
}
ROUTE_MANIFEST_END */
